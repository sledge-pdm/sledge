name: ci

on:
  push:
    branches: ['**']
    paths-ignore:
      - '**/*.md'
      - 'LICENSE'
      - 'assets/**'
  pull_request:
    paths-ignore:
      - '**/*.md'
      - 'LICENSE'
      - 'assets/**'
  workflow_dispatch: {}

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    name: Quality & Tests (Linux)
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup pnpm (install first for node cache detection)
        uses: pnpm/action-setup@v4
        with:
          version: 10.18.1
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Install Rust (stable + components)
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache Rust build
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            apps/sledge/src-tauri
            packages/wasm

      - name: install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Install JS dependencies
        run: pnpm install --frozen-lockfile

      - name: Build wasm
        run: pnpm wasm:build

      - name: Type check (all workspaces)
        run: pnpm -r exec tsc --noEmit --skipLibCheck

      - name: Prettier check
        run: pnpm exec prettier --check .

      - name: Stylelint (CSS no-fix)
        run: pnpm exec stylelint -c .stylelintrc.json "apps/sledge/src/**/*.css" || true
        # NOTE: Using || true so stylelint warnings (non-error) don't fail build; adjust if needed.

      - name: Rust format check
        working-directory: apps/sledge/src-tauri
        run: cargo fmt --all -- --check

      - name: Rust clippy
        working-directory: apps/sledge/src-tauri
        run: cargo clippy --all-targets -- -D warnings

      - name: Rust check
        working-directory: apps/sledge/src-tauri
        run: cargo check --all-targets

      - name: Run unit tests (Vitest)
        run: pnpm test

      - name: Upload Vitest results (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vitest-logs
          path: |
            ./**/coverage
            ./**/vitest-temp
          if-no-files-found: ignore
          retention-days: 5
