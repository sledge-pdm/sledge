/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const mask_to_path: (a: number, b: number, c: number, d: number, e: number, f: number) => [number, number];
export const fill_lasso_selection: (a: number, b: number, c: any, d: number, e: number, f: number, g: number, h: number, i: number) => number;
export const fill_lasso_selection_with_mask: (a: number, b: number, c: any, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number) => number;
export const fill_lasso_selection_point_in_polygon: (a: number, b: number, c: any, d: number, e: number, f: number, g: number) => number;
export const patch_buffer_rgba: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => [number, number];
export const __wbg_ditheringoption_free: (a: number, b: number) => void;
export const __wbg_get_ditheringoption_mode: (a: number) => number;
export const __wbg_set_ditheringoption_mode: (a: number, b: number) => void;
export const __wbg_get_ditheringoption_levels: (a: number) => number;
export const __wbg_set_ditheringoption_levels: (a: number, b: number) => void;
export const __wbg_get_ditheringoption_strength: (a: number) => number;
export const __wbg_set_ditheringoption_strength: (a: number, b: number) => void;
export const ditheringoption_new: (a: number, b: number, c: number) => number;
export const dithering: (a: number, b: number, c: any, d: number, e: number, f: number) => void;
export const dithering_random: (a: number, b: number, c: any, d: number, e: number, f: number) => void;
export const dithering_error_diffusion: (a: number, b: number, c: any, d: number, e: number, f: number) => void;
export const dithering_ordered: (a: number, b: number, c: any, d: number, e: number, f: number) => void;
export const __wbg_dustremovaloption_free: (a: number, b: number) => void;
export const __wbg_get_dustremovaloption_max_size: (a: number) => number;
export const __wbg_set_dustremovaloption_max_size: (a: number, b: number) => void;
export const __wbg_get_dustremovaloption_alpha_threshold: (a: number) => number;
export const __wbg_set_dustremovaloption_alpha_threshold: (a: number, b: number) => void;
export const dustremovaloption_new: (a: number, b: number) => number;
export const dust_removal: (a: number, b: number, c: any, d: number, e: number, f: number) => void;
export const dust_removal_simple: (a: number, b: number, c: any, d: number, e: number, f: number) => void;
export const crop_patch_rgba: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => [number, number];
export const filter_by_selection_mask: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => [number, number];
export const composite_fill_result: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => [number, number];
export const trim_mask_with_box: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => [number, number];
export const auto_select_region_mask: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => [number, number];
export const slice_patch_rgba: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => [number, number];
export const __wbg_gaussianbluroption_free: (a: number, b: number) => void;
export const __wbg_get_gaussianbluroption_radius: (a: number) => number;
export const __wbg_set_gaussianbluroption_radius: (a: number, b: number) => void;
export const __wbg_get_gaussianbluroption_alpha_mode: (a: number) => number;
export const __wbg_set_gaussianbluroption_alpha_mode: (a: number, b: number) => void;
export const gaussianbluroption_new: (a: number, b: number) => number;
export const gaussian_blur: (a: number, b: number, c: any, d: number, e: number, f: number) => void;
export const grayscale: (a: number, b: number, c: any, d: number, e: number) => void;
export const invert: (a: number, b: number, c: any, d: number, e: number) => void;
export const combine_masks_add: (a: number, b: number, c: number, d: number) => [number, number];
export const combine_masks_subtract: (a: number, b: number, c: number, d: number) => [number, number];
export const combine_masks_replace: (a: number, b: number) => [number, number];
export const fill_rect_mask: (a: number, b: number, c: any, d: number, e: number, f: number, g: number, h: number, i: number) => void;
export const apply_mask_offset: (a: number, b: number, c: number, d: number, e: number, f: number) => [number, number];
export const __wbg_brightnesscontrastoption_free: (a: number, b: number) => void;
export const __wbg_get_brightnesscontrastoption_brightness: (a: number) => number;
export const __wbg_set_brightnesscontrastoption_brightness: (a: number, b: number) => void;
export const __wbg_get_brightnesscontrastoption_contrast: (a: number) => number;
export const __wbg_set_brightnesscontrastoption_contrast: (a: number, b: number) => void;
export const brightnesscontrastoption_new: (a: number, b: number) => number;
export const brightness_contrast: (a: number, b: number, c: any, d: number, e: number, f: number) => void;
export const brightness: (a: number, b: number, c: any, d: number, e: number, f: number) => void;
export const contrast: (a: number, b: number, c: any, d: number, e: number, f: number) => void;
export const __wbg_posterizeoption_free: (a: number, b: number) => void;
export const __wbg_get_posterizeoption_levels: (a: number) => number;
export const __wbg_set_posterizeoption_levels: (a: number, b: number) => void;
export const posterizeoption_new: (a: number) => number;
export const posterize: (a: number, b: number, c: any, d: number, e: number, f: number) => void;
export const posterize_simple: (a: number, b: number, c: any, d: number, e: number, f: number) => void;
export const create_opacity_mask: (a: number, b: number, c: number, d: number) => [number, number];
export const flip_pixels_vertically: (a: number, b: number, c: any, d: number, e: number) => void;
export const extract_tile_buffer: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => [number, number];
export const blend_layers: (a: number, b: number, c: any, d: number, e: number, f: number, g: number, h: number, i: number) => void;
export const calculate_texture_memory_usage: (a: number, b: number, c: number) => number;
export const __wbindgen_export_0: WebAssembly.Table;
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_start: () => void;
